language: minimal

stages:
  - setup
# - check

jobs:
  include:
    - stage: setup
      name: "Linux clang 11, gcc 10"
      os: linux
      dist: focal
      addons: &clang11
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
            - sourceline: "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main"
              key_url: "https://apt.llvm.org/llvm-snapshot.gpg.key"
          packages:
            - g++-10
            - gcc-10
            - clang-11
            - libc++-11-dev
            - libc++abi-11-dev
            - git
            - python3.8
            - python3-pip
      script:
        - sudo apt remove --purge cmake -y
        - sudo snap install cmake --classic
        - pip3 install conan
        - pip3 install parameterized
        - clang-11 --version
        - cmake --version
        - python3 --version
        - whereis cmake
        - echo "PATH=${PATH}"
        - wget https://cmake.org/files/v3.20/cmake-3.20.5-linux-x86_64.tar.gz
        - tar -xzf cmake-3.20.5-linux-x86_64.tar.gz
        - export PATH="`pwd`/cmake-3.20.5-linux-x86_64/bin:${PATH}"
        - cmake --version
        - whereis cmake
       # - cd buildSystemTests && python3 runTests.py
      env:
        - MATRIX_EVAL="CC=clang-11.0 && CXX=clang++-11.0"
        
    - stage: setup
      name: "MacOS clang 12, gcc-10"
      os: osx
      osx_image: xcode12.5
      addons:
        homebrew:
          packages:
          - gcc@10
      script:
        - pip3 install conan
        - pip3 install parameterized
        - gcc-10 --version
        - g++-10 --version
        - cmake --version
        - python3 --version
       # - cd buildSystemTests && python3 runTests.py
      env:
        - MATRIX_EVAL="CC=gcc-10 && CXX=g++-10"

script: 
  - echo "this script ${MATRIX_EVAL}"

before_install:
  - echo "${MATRIX_EVAL}"